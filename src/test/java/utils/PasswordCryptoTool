import javax.crypto.Cipher;
import javax.crypto.spec.SecretKeySpec;
import java.util.Base64;
import java.util.Scanner;

public class PasswordCryptoTool {
    private static final String ALGO = "AES";

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("üîê Password Encryption/Decryption Tool");
        System.out.println("1. Encrypt");
        System.out.println("2. Decrypt");
        System.out.print("Choose option (1 or 2): ");
        int choice = scanner.nextInt();
        scanner.nextLine();  // consume newline

        System.out.print("Enter 16-character secret key: ");
        String key = scanner.nextLine();

        if (key.length() != 16) {
            System.err.println("‚ùå Key must be exactly 16 characters.");
            return;
        }

        try {
            if (choice == 1) {
                System.out.print("Enter password to encrypt: ");
                String plainText = scanner.nextLine();
                String encrypted = encrypt(plainText, key);
                System.out.println("‚úÖ Encrypted password:");
                System.out.println(encrypted);
            } else if (choice == 2) {
                System.out.print("Enter encrypted password: ");
                String encrypted = scanner.nextLine();
                String decrypted = decrypt(encrypted, key);
                System.out.println("‚úÖ Decrypted password:");
                System.out.println(decrypted);
            } else {
                System.out.println("‚ùå Invalid choice.");
            }
        } catch (Exception e) {
            System.err.println("‚ùå Operation failed: " + e.getMessage());
        }
    }

    public static String encrypt(String data, String key) throws Exception {
        SecretKeySpec secretKey = new SecretKeySpec(key.getBytes(), ALGO);
        Cipher cipher = Cipher.getInstance(ALGO);
        cipher.init(Cipher.ENCRYPT_MODE, secretKey);
        byte[] encrypted = cipher.doFinal(data.getBytes());
        return Base64.getEncoder().encodeToString(encrypted);
    }

    public static String decrypt(String encryptedData, String key) throws Exception {
        SecretKeySpec secretKey = new SecretKeySpec(key.getBytes(), ALGO);
        Cipher cipher = Cipher.getInstance(ALGO);
        cipher.init(Cipher.DECRYPT_MODE, secretKey);
        byte[] decoded = Base64.getDecoder().decode(encryptedData);
        byte[] decrypted = cipher.doFinal(decoded);
        return new String(decrypted);
    }
}
